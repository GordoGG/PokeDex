//
//  PokedexDetailViewControllerViewController.swift
//  PokeDex
//
//  Created by Fabrizio on 6/6/19.
//  Copyright (c) 2019 Fabrizio. All rights reserved.
//
//  This file was generated by the StartApps CleanSwift Xcode Templates. V2.0
//  By Gabriel Lanata (http://StartApps.pe) with credit to http://clean-swift.com
//

import UIKit
import Kingfisher

class PokedexDetailViewControllerViewController: UIViewController {

    var interactor: PokedexDetailViewControllerInteractor!
    var router: PokedexDetailViewControllerRouter!

    // MARK: - Object variables
    @IBOutlet weak var pokemonView: UIImageView!
    @IBOutlet weak var pokemonDetail: UILabel!
    @IBOutlet weak var starButton: UIButton!
    
    
    // NOTE: Only store objects here if required
    var favouritePokemonList = [String]()
    let userDefault = UserDefaults.standard
    
    // private var displayedSomethings: [FetchPokemon]?

    // MARK: - Inteface objects

    // @IBOutlet private weak var somethingLabel: UILabel!

    // MARK: - View lifecycle

    override func viewDidLoad() {
        super.viewDidLoad()
//        self.navigationController?.title = "XDFXD"
        setupView()
        doFetchPokemon()
    }

    func setupView() {
        // NOTE: Setup the view on load
        // somethingLabel.textColor = UIColor.blue
        if #available(iOS 11.0, *) {
            self.navigationController?.navigationBar.prefersLargeTitles = true
        } else {
            // Fallback on earlier versions
        }
        
        if let items = userDefault.array(forKey: "FavouritePokemon") as? [String] {
            favouritePokemonList = items
        }
        
        //Star
        if favouritePokemonList.contains(interactor.pokemonPost.pokemonPost.name){
            starButton.setImage(UIImage(named: "selected"), for: .normal)
        } else {
            starButton.setImage(UIImage(named: "empty"), for: .normal)
        }
                
        starButton.addTarget(self, action: #selector(starTapped), for: UIControl.Event.touchUpInside)
    }
    
    @objc func starTapped(){
        
        if favouritePokemonList.contains(interactor.pokemonPost.pokemonPost.name){
            let index = favouritePokemonList.firstIndex(of: interactor.pokemonPost.pokemonPost.name)
            favouritePokemonList.remove(at: index!)
            starButton.setImage(UIImage(named: "empty"), for: .normal)
        } else {
            favouritePokemonList.append(interactor.pokemonPost.pokemonPost.name)
            starButton.setImage(UIImage(named: "selected"), for: .normal)
        }
        self.userDefault.set(self.favouritePokemonList, forKey: "FavouritePokemon")
        
    }
    // MARK: - Interaction handling
    
    // @IBAction func buttonPressed() { ...

    // MARK: - Event handling

    func doFetchPokemon() {
        // NOTE: Ask the Interactor to do some work
        // NOTE: Start loading animation here
        interactor.doFetchPokemon(request: PokedexDetailViewControllerScene.FetchPokemon.Request())
    }

    // MARK: - Display logic
    
    func displayFetchPokemon(viewModel: PokedexDetailViewControllerScene.FetchPokemon.ViewModel) {
        // NOTE: Stop loading animation here
        // NOTE: Display the result from the Presenter
        // somethingLabel.text = viewModel.name
        
        let url = URL(string: viewModel.displayedPokemons.imageUrl)
        self.pokemonView.kf.indicatorType = .activity
        self.pokemonView.kf.setImage(with: url)
        
//        if let url = URL(string: viewModel.displayedPokemons.imageUrl)
//        {
//            DispatchQueue.global().async {
//                if let data = try? Data( contentsOf:url)
//                {
//                    DispatchQueue.main.async {
//                        self.pokemonView.image = UIImage( data:data)
//                    }
//                }
//            }
//        }

        self.title = viewModel.displayedPokemons.name.capitalized
        
        pokemonDetail.text = "Id: \(viewModel.displayedPokemons.id)\nNombre: \(viewModel.displayedPokemons.name.capitalized)"
    }
}
